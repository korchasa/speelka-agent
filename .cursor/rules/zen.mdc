---
description:
globs:
alwaysApply: true
---
## Zen of Development

1. Remove anything unnecessary.
2. Use meaningful names and avoid hidden tricks.
3. Build the easiest version that works before adding complexity.
4. Use patterns or frameworks only if simple code can't do the job.
5. Avoid deep folder trees or class chains.
6. Space helps code breathe and makes logic easier to spot.
7. Others will spend more time reading your code than you did writing it.
8. Stick to the style guide, even for edge cases.
9. Clean code matters—but shipping useful code matters more.
10. Don't hide problems—log them or return them.
11. If you must ignore one, explain why and how it's safe.
12. Fix failing tests, linter issues, and missing parts.
13. Read docs, search online, or test it out.
14. Use common patterns others will recognize.
15. Leave notes for anything hard to spot.
16. Move quickly, but still test and review.
17. If you can explain your design easily, it's probably good.
18. If it's hard to explain, it's probably too complex.
19. Reuse libraries and keep your own code modular.