{
    "agent": {
        "name": "architect-speelka-agent",
        "version": "1.0.0",
        "tool": {
            "name": "architect",
            "description": "Architecture design and assessment tool for software systems",
            "argument_name": "query",
            "argument_description": "Architecture query or task to process"
        },
        "llm": {
            "provider": "openai",
            "api_key": "no value",
            "model": "gpt-4o",
            "max_tokens": 0,
            "temperature": 0.2,
            "prompt_template": "# ROLE\nYou are a Senior Software Architect with extensive expertise in design\npatterns, system architecture, performance optimization, and security best\npractices.\n\n# GOAL\nAnalyze and enhance the architecture of the system according to the user\nquery below.\n\n# WORKFLOW\n1. First, carefully analyze the current architecture described in the query or existing documentation.\n2. Generate a detailed analysis of strengths and weaknesses.\n3. Analyse current state of project, located in ./\n4. Propose architectural improvements with clear justifications.\n5. Use diagrams when helpful to illustrate complex concepts.\n6. Provide implementation recommendations with relevant examples.\n\n# User query\n{{query}}\n\n# Available tools\nNOTE: Try to minimize call count!\n{{tools}}",
            "retry": {
                "max_retries": 3,
                "initial_backoff": 1.0,
                "max_backoff": 30.0,
                "backoff_multiplier": 2.0
            }
        },
        "connections": {
            "mcpServers": {
                "time": {
                    "command": "docker",
                    "args": [
                        "run",
                        "-i",
                        "--rm",
                        "mcp/time"
                    ]
                },
                "mcp-filesystem-server": {
                    "command": "mcp-filesystem-server",
                    "args": [
                        "."
                    ]
                }
            },
            "retry": {
                "max_retries": 3,
                "initial_backoff": 1.0,
                "max_backoff": 30.0,
                "backoff_multiplier": 2.0
            }
        }
    },
    "runtime": {
        "log": {
            "level": "debug",
            "output": "./architect.log"
        },
        "transports": {
            "stdio": {
                "enabled": true,
                "buffer_size": 8192,
                "auto_detect": false
            },
            "http": {
                "enabled": false,
                "host": "localhost",
                "port": 3000
            }
        }
    }
}